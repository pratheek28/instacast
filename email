class email_data(BaseModel):
    email: str
    studioemail:str
    role: str
    movie: str
    studio: str
    name: str
    status: str

@app.post("/sendEmail")
def sendEmail(data: email_data):
    api_instance = sib_api_v3_sdk.TransactionalEmailsApi(sib_api_v3_sdk.ApiClient(configuration))
    
    # Sender and recipient details
    sender = {"name": "InstaCast", "email": "work@instacast.com"}
    to = [{"email": data.email, "name": data.name}]
    reply_to = {"email": data.studioemail, "name": data.studio}
    
    # Parameters for the template placeholders
    params = {
        "role": data.role,  # Replace with actual template placeholders
        "movie": data.movie,
        "studio":data.studio,
    }
    
    # Define the transactional template ID
    template_id = 9  # Replace with your actual template ID from Sendinblue
    
    # Create the SendSmtpEmail object using the template ID and params
    send_smtp_email = sib_api_v3_sdk.SendSmtpEmail(
        to=to,
        reply_to=reply_to,
        sender=sender,
        template_id=template_id,  # Use the template ID here
        params=params  # Pass params for the placeholders
    )

    try:
        # Send the email using the transactional template
        api_response = api_instance.send_transac_email(send_smtp_email)
        pprint(api_response)
    except ApiException as e:
        print(f"Exception when calling SMTPApi->send_transac_email: {e}\n")

@app.post("/sendEmailDec")
def sendEmailDec(data: email_data):
    api_instance = sib_api_v3_sdk.TransactionalEmailsApi(sib_api_v3_sdk.ApiClient(configuration))
    
    # Sender and recipient details
    sender = {"name": "InstaCast", "email": "work@instacast.com"}
    to = [{"email": data.email, "name": data.name}]
    reply_to = {"email": data.studioemail, "name": data.studio}
    
    # Parameters for the template placeholders
    params = {
        "role": data.role,  # Replace with actual template placeholders
        "movie": data.movie,
        "studio":data.studio,
        "status":data.status,
    }
    
    # Define the transactional template ID
    template_id = 10  # Replace with your actual template ID from Sendinblue
    
    # Create the SendSmtpEmail object using the template ID and params
    send_smtp_email = sib_api_v3_sdk.SendSmtpEmail(
        to=to,
        reply_to=reply_to,
        sender=sender,
        template_id=template_id,  # Use the template ID here
        params=params  # Pass params for the placeholders
    )

    try:
        # Send the email using the transactional template
        api_response = api_instance.send_transac_email(send_smtp_email)
        pprint(api_response)
    except ApiException as e:
        print(f"Exception when calling SMTPApi->send_transac_email: {e}\n")
